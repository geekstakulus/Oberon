module Test

	import SDL, Out
	
	var
		window: *SDL.Window
		surface, image: *SDL.Surface
		res, timer: integer
		v: SDL.version
		x,y: carray 1 of integer 
	   event: SDL.Event	
	
	proc filter(userdata: *void; event: *SDL.Event): integer
		var str : carray 16 of char
	begin
		str := "event: %d"+0dx
		SDL.Log(str, event.type_)		
		//Out.String("event: ") Out.Int(event.type_,0) Out.Ln
		return 1
	end filter
	
	
	proc tick( time: integer )
	begin
		println(time)
		// TODO SDL.Log("time: %d\n", time)	
	end tick

(*
	proc checkEvents(): boolean
	var
		//event: SDL.Event
		tmp: integer
	begin
	   if SDL.WaitEventTimeout(event,30) # 0 then
	      if event.type_ = SDL.QUIT then
	         return true
	      end
	      SDL.GetMouseState(x,y)
	      Out.String("mouse x=") Out.Int(x[0],0) Out.String(" y=") Out.Int(y[0],0) Out.Ln
	   end
	   return false
	end checkEvents
*)
var
	tmp1,tmp2 : carray 32 of char
begin
	//trap()
	SDL.GetVersion(v)
	Out.String("Loaded SDL version: ")
	Out.Int(v.major,0) Out.String(".") Out.Int(v.minor,0) 
	Out.String(".") Out.Int(v.patch,0) Out.Ln

	tmp1 := "hello from log %d.%d.%d %f %s"
	tmp2 := "test"
	SDL.Log(tmp1, v.major, v.minor, v.patch, long(123.45), tmp2 )
	
	SDL.SetEventFilter( filter, nil ) 
	
	tmp1 := "Hello SDL!"
	window := SDL.CreateWindow(tmp1, 20, 20, 512, 512, SDL.WINDOW_SHOWN )
	surface := SDL.GetWindowSurface(window)

	tmp1 := "lena.bmp"
	tmp2 := "rb"
	image := SDL.LoadBMP_RW(SDL.RWFromFile(tmp1, tmp2), 1)
	res := SDL.UpperBlit(image, nil, surface, nil)
	
	res := SDL.UpdateWindowSurface(window)
   SDL.FreeSurface(image)
   
   loop
	   //if checkEvents() then exit end
	   //(*
	   if SDL.WaitEventTimeout(event,30) # 0 then
	      if event.type_ = SDL.QUIT then
	         exit
	      end
	      SDL.GetMouseState(x,y)
	      Out.String("mouse x=") Out.Int(x[0],0) Out.String(" y=") Out.Int(y[0],0) Out.Ln
	   end
	   //*)
   end
	
	SDL.DestroyWindow(window)
	SDL.Quit()
	println("Done")
end Test
