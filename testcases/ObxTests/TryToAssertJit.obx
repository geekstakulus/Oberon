module TryToAssertJit

(*
	proc Test(var i: integer )
	begin
		println("gugus")
		for i := 0 to 1000 do
			println(i)
		end
	end Test *)

	type 
		T = ( A, B, C D E )
	
	proc Dummy(t:T) end
	
var i: integer
		t : T

begin

(*
	println("upwards:") // all down to ENDDDD crashes after 9
	for t := A to E do
		println(t)
	end

	println("downwards:") // crashes after 16
	for t := D to B do
		println(t)
	end
	
	println("inc dec:") // crashes after 32
	t := B
	inc(t)

	println( t ) // no crash
	t := D
	dec(t)
	println( t )	

	println( max(T) )
	println( min(T) )
	/// ENDDDD
		*)
		

	(* crashes after 32 in rec_check_slots J->framedepth == depth*)
	println("inc dec:") 
	t := B
	inc(t)
	println( t ) 
	t := D
	dec(t)
	println( t )	

	println( max(T) )
	println( min(T) )
	// doesn't crash anymore after fix on 2021-07-11; there was a slot bought and not sold
	// in builtin proc calls; apparently that confuses the JIT; not the first time I observe this
	
	(* crashes after 46 in rec_check_slots J->framedepth == depth
	println("inc dec:") 
	t := B
	inc(t)
	println( t ) 
	t := D
	dec(t)
	println( t )	

	Dummy( max(T) )
	Dummy( min(T) )*)

	
	(* still no assert at 1650
	println("inc dec:") 
	t := B
	inc(t)
	println( t ) 
	t := D
	dec(t)
	println( t )	

	t := max(T)
	println( t )
	t := min(T)
	println( t ) *)

end TryToAssertJit
